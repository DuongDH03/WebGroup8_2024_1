CREATE DATABASE IF NOT EXISTS cinema_booking;

USE cinema_booking;

-- Bảng User
CREATE TABLE IF NOT EXISTS User (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    tel VARCHAR(15),
    password VARCHAR(255) NOT NULL
);

-- Bảng Coupon
CREATE TABLE IF NOT EXISTS Coupon (
    coupon_id INT AUTO_INCREMENT PRIMARY KEY,
    coupon_name VARCHAR(100) NOT NULL,
    coupon_point INT,
    user_id INT,
    expiry_date DATE,
    FOREIGN KEY (user_id) REFERENCES User(user_id)
);

-- Bảng Membership_cards
CREATE TABLE IF NOT EXISTS Membership_cards (
    membership_id INT AUTO_INCREMENT PRIMARY KEY,
    issue_date DATE,
    expiry_date DATE,
    points_accumulated INT,
    is_activated BOOLEAN
);

-- Bảng Cinemas
CREATE TABLE IF NOT EXISTS Cinemas (
    cinema_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    location VARCHAR(255),
    phone VARCHAR(15),
    city VARCHAR(100),
    state VARCHAR(100)
);

-- Bảng Room
CREATE TABLE IF NOT EXISTS Room (
    room_id INT AUTO_INCREMENT PRIMARY KEY,
    cinema_id INT,
    room_name VARCHAR(255),
    FOREIGN KEY (cinema_id) REFERENCES Cinemas(cinema_id)
);

-- Bảng Seat
CREATE TABLE IF NOT EXISTS Seat (
    seat_id INT AUTO_INCREMENT PRIMARY KEY,
    seat_row VARCHAR(5),
    seat_col VARCHAR(5),
    seat_status ENUM('available', 'booked'),
    room_id INT,
    FOREIGN KEY (room_id) REFERENCES Room(room_id)
);

-- Bảng Genre
CREATE TABLE IF NOT EXISTS Genre (
    genre_id INT AUTO_INCREMENT PRIMARY KEY,
    genre_name VARCHAR(100) NOT NULL
);

-- Bảng Movies
CREATE TABLE IF NOT EXISTS Movies (
    movie_id INT AUTO_INCREMENT PRIMARY KEY,
    movie_name VARCHAR(255) NOT NULL,
    genre_id INT,
    title VARCHAR(255),
    description TEXT,
    duration INT,
    release_date DATE,
    FOREIGN KEY (genre_id) REFERENCES Genre(genre_id)
);

-- Bảng Schedule
CREATE TABLE IF NOT EXISTS Schedule (
    schedule_id INT AUTO_INCREMENT PRIMARY KEY,
    cinema_id INT,
    movie_id INT,
    room_id INT,
    start_time DATETIME,
    end_time DATETIME,
    FOREIGN KEY (cinema_id) REFERENCES Cinemas(cinema_id),
    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id),
    FOREIGN KEY (room_id) REFERENCES Room(room_id)
);

-- Bảng Booking
CREATE TABLE IF NOT EXISTS Booking (
    booking_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    schedule_id INT,
    total_price DECIMAL(10, 2),
    booking_date DATETIME,
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (schedule_id) REFERENCES Schedule(schedule_id)
);

-- Bảng Ticket
CREATE TABLE IF NOT EXISTS Ticket (
    ticket_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT,
    seat_id INT,
    cinema_id INT,
    price DECIMAL(10, 2),
    status ENUM('unused', 'used'),
    FOREIGN KEY (booking_id) REFERENCES Booking(booking_id),
    FOREIGN KEY (seat_id) REFERENCES Seat(seat_id),
    FOREIGN KEY (cinema_id) REFERENCES Cinemas(cinema_id)
);

SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE User;
TRUNCATE TABLE Cinemas;
TRUNCATE TABLE Movies;
TRUNCATE TABLE Genre;
TRUNCATE TABLE Schedule;

-- Inserting data into User TABLE 
INSERT INTO User (name, email, tel, password) VALUES
('Alice Johnson', 'alice@example.com', '555-1234', 'password123'),
('Bob Smith', 'bob@example.com', '555-2345', 'password456'),
('Charlie Brown', 'charlie@example.com', '555-3456', 'password789'),
('Diana Prince', 'diana@example.com', '555-4567', 'password101'),
('Eve Adams', 'eve@example.com', '555-5678', 'password102'),
('Frank Castle', 'frank@example.com', '555-6789', 'password103'),
('Grace Lee', 'grace@example.com', '555-7890', 'password104'),
('Harry Potter', 'harry@example.com', '555-8901', 'password105'),
('Ivy Nguyen', 'ivy@example.com', '555-9012', 'password106'),
('Jack Ryan', 'jack@example.com', '555-0123', 'password107'),
('Karen Hill', 'karen@example.com', '555-1235', 'password108'),
('Liam Miller', 'liam@example.com', '555-2346', 'password109'),
('Mona Lisa', 'mona@example.com', '555-3457', 'password110'),
('Nancy Drew', 'nancy@example.com', '555-4568', 'password111'),
('Oscar Wilde', 'oscar@example.com', '555-5679', 'password112'),
('Paul Atreides', 'paul@example.com', '555-6780', 'password113'),
('Quincy Jones', 'quincy@example.com', '555-7891', 'password114'),
('Rachel Green', 'rachel@example.com', '555-8902', 'password115'),
('Steve Rogers', 'steve@example.com', '555-9013', 'password116'),
('Tony Stark', 'tony@example.com', '555-0124', 'password117');

-- Inserting data into Cinemas TABLE 
INSERT INTO Cinemas (name, location, phone, city, state) VALUES
('AMC Empire 25', '234 W 42nd St', '212-398-2597', 'New York', 'NY'),
('Regal L.A. LIVE', '1000 W Olympic Blvd', '213-763-6070', 'Los Angeles', 'CA'),
('Alamo Drafthouse Downtown', '320 E 6th St', '512-861-7020', 'Austin', 'TX'),
('ArcLight Hollywood', '6360 Sunset Blvd', '323-464-1478', 'Los Angeles', 'CA'),
('Cinemark 17', '11819 Webb Chapel Rd', '214-350-2286', 'Dallas', 'TX'),
('Angelika Film Center', '5321 E Mockingbird Ln', '214-826-3300', 'Dallas', 'TX'),
('Marcus Majestic Cinema', '770 Spring Hill Ring Rd', '262-502-9071', 'Brookfield', 'WI'),
('Landmark Atlantic Plumbing Cinema', '807 V St NW', '202-534-1965', 'Washington', 'DC'),
('Pacific Place Cinemas', '600 Pine St', '206-652-8908', 'Seattle', 'WA'),
('Emagine Canton', '39535 Ford Rd', '734-721-3456', 'Canton', 'MI'),
('Landmark E Street Cinema', '555 11th St NW', '202-783-9494', 'Washington', 'DC'),
('iPic Theaters Fulton Market', '11 Fulton St', '212-776-8274', 'New York', 'NY'),
('Cinemark Palace 20', '3200 Airport Rd', '561-395-9009', 'Boca Raton', 'FL'),
('Cinépolis Luxury Cinemas', '13646 Poway Rd', '858-513-8301', 'Poway', 'CA'),
('Regal Webster Place', '1471 W Webster Ave', '312-248-9146', 'Chicago', 'IL'),
('Showcase Cinema de Lux', '73-410 Grand Ave', '718-699-9090', 'Queens', 'NY'),
('Landmark Inwood Theatre', '5458 W Lovers Ln', '214-352-5085', 'Dallas', 'TX'),
('AMC Boston Common', '175 Tremont St', '888-262-4386', 'Boston', 'MA'),
('Gene Siskel Film Center', '164 N State St', '312-846-2800', 'Chicago', 'IL'),
('Kendall Square Cinema', '355 Binney St', '617-621-1202', 'Cambridge', 'MA');

INSERT INTO Genre (genre_name) VALUES
('Science Fiction'),    -- genre_id 1
('Action'),             -- genre_id 2
('Adventure'),          -- genre_id 3
('Drama'),              -- genre_id 4
('Animation'),          -- genre_id 5
('Crime'),              -- genre_id 6
('Fantasy'),            -- genre_id 7
('Thriller');           -- genre_id 8


-- Inserting data into Movies TABLE 
INSERT INTO Movies (movie_name, genre_id, title, description, duration, release_date) VALUES
('Inception', 1, 'Inception', 'A mind-bending thriller by Christopher Nolan', 148, '2010-07-16'),
('The Dark Knight', 1, 'The Dark Knight', 'Batman faces the Joker in Gotham City', 152, '2008-07-18'),
('Avengers: Endgame', 2, 'Avengers: Endgame', 'The final showdown against Thanos', 181, '2019-04-26'),
('Interstellar', 1, 'Interstellar', 'A space exploration story by Christopher Nolan', 169, '2014-11-07'),
('The Matrix', 1, 'The Matrix', 'A hacker learns about the reality of his world', 136, '1999-03-31'),
('Jurassic Park', 3, 'Jurassic Park', 'Dinosaurs roam in a dangerous park', 127, '1993-06-11'),
('Titanic', 4, 'Titanic', 'A tragic love story aboard the Titanic', 195, '1997-12-19'),
('The Lion King', 5, 'The Lion King', 'A lion cub’s journey to adulthood', 88, '1994-06-15'),
('Toy Story', 5, 'Toy Story', 'The story of toys coming to life', 81, '1995-11-22'),
('Spider-Man: No Way Home', 1, 'Spider-Man: No Way Home', 'Spider-Man faces multiple villains', 148, '2021-12-17'),
('Frozen', 5, 'Frozen', 'A magical tale of two sisters', 102, '2013-11-27'),
('The Godfather', 6, 'The Godfather', 'A crime family saga', 175, '1972-03-24'),
('The Shawshank Redemption', 6, 'The Shawshank Redemption', 'A story of hope and friendship', 142, '1994-09-23'),
('Forrest Gump', 4, 'Forrest Gump', 'The story of a simple man’s incredible journey', 142, '1994-07-06'),
('Pulp Fiction', 6, 'Pulp Fiction', 'Interwoven stories of crime', 154, '1994-10-14'),
('The Lord of the Rings: The Fellowship of the Ring', 7, 'The Fellowship of the Ring', 'The first part of an epic fantasy saga', 178, '2001-12-19'),
('Harry Potter and the Sorcerer’s Stone', 7, 'Sorcerer’s Stone', 'The beginning of a magical journey', 152, '2001-11-16'),
('Finding Nemo', 5, 'Finding Nemo', 'A fish searches for his lost son', 100, '2003-05-30'),
('The Silence of the Lambs', 6, 'Silence of the Lambs', 'A suspenseful thriller', 118, '1991-02-14'),
('The Sixth Sense', 8, 'The Sixth Sense', 'A boy who can see dead people', 107, '1999-08-06');

-- Inserting data into Schedule TABLE with cinema_id = 1 for a single cinema
INSERT INTO Schedule (cinema_id, movie_id, room_id, start_time, end_time) VALUES
(1, 1, 1, '2024-11-01 12:00:00', '2024-11-01 14:28:00'),
(1, 2, 1, '2024-11-01 15:00:00', '2024-11-01 17:32:00'),
(1, 3, 1, '2024-11-01 18:00:00', '2024-11-01 21:01:00'),
(1, 4, 1, '2024-11-01 12:30:00', '2024-11-01 15:19:00'),
(1, 5, 1, '2024-11-01 16:00:00', '2024-11-01 18:16:00'),
(1, 6, 1, '2024-11-02 12:00:00', '2024-11-02 14:07:00'),
(1, 7, 1, '2024-11-02 15:00:00', '2024-11-02 18:15:00'),
(1, 8, 1, '2024-11-02 18:30:00', '2024-11-02 20:58:00'),
(1, 9, 1, '2024-11-03 12:00:00', '2024-11-03 13:21:00'),
(1, 10, 1, '2024-11-03 15:00:00', '2024-11-03 17:28:00'),
(1, 11, 1, '2024-11-03 18:00:00', '2024-11-03 19:42:00'),
(1, 12, 1, '2024-11-04 12:30:00', '2024-11-04 15:25:00'),
(1, 13, 1, '2024-11-04 16:00:00', '2024-11-04 18:22:00'),
(1, 14, 1, '2024-11-04 18:30:00', '2024-11-04 21:04:00'),
(1, 15, 1, '2024-11-05 12:00:00', '2024-11-05 14:34:00'),
(1, 16, 1, '2024-11-05 15:00:00', '2024-11-05 17:58:00'),
(1, 17, 1, '2024-11-05 18:00:00', '2024-11-05 20:58:00'),
(1, 18, 1, '2024-11-06 12:00:00', '2024-11-06 13:40:00'),
(1, 19, 1, '2024-11-06 15:00:00', '2024-11-06 17:04:00'),
(1, 20, 1, '2024-11-06 18:00:00', '2024-11-06 19:47:00');

SET FOREIGN_KEY_CHECKS = 1;
